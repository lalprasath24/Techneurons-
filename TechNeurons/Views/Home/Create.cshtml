@model TechNeurons.Models.Employee

@{
    ViewBag.Title = "Create";

    List<SelectListItem> dapartment = new List<SelectListItem>()
    {
        new SelectListItem{Text="IT",Value="IT"},
        new SelectListItem{Text="Sales",Value="Sales"},
        new SelectListItem{Text="HR",Value="HR"},

    };
}



<div class="container">
    <div class="row mb-5">
        <div class="col-md-6">
            <h3>Create Employee List</h3>
        </div>
        <div class="col-md-6 text-end">

        </div>
    </div>
    @using (Html.BeginForm("Create", "Home", FormMethod.Post))
    {

        @Html.AntiForgeryToken();

        <div class="row">
            <div class="col-md-6">

                <div class="form-group mb-3">
                    <label>NAME</label>
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(m => m.name,"",new {@class="text-danger"})
                </div>

                <div class="form-group mb-3">
                    <label>AGE</label>
                    @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(m => m.age, "", new { @class = "text-danger" })
                </div>
                <div class="form-group mb-3">
                    <label>EXPERIENCE</label>
                    @Html.DropDownListFor(model => model.experience, new SelectList(new string[] { "Experience", "Fresher" }), "Select Experience", new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(m => m.experience, "", new { @class = "text-danger" })


                </div>
                <div class="form-group mb-3">
                    <label>DEPARTMENT</label>
                    @Html.DropDownListFor(model => model.department, new SelectList(dapartment, "Value", "Text"), "Select Department", new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(m => m.department, "", new { @class = "text-danger" })

                </div>

            </div>
            <div class="col-md-6">

                <div class="form-group mb-3">
                    <label>GENDER </label><br />
                    @Html.RadioButtonFor(model => model.gender, "Male", new { @required = "required" })<label class="m-lg-2">Male</label><br />
                    @Html.RadioButtonFor(model => model.gender, "FeMale", new { @required = "required" })<label class="m-lg-2">FeMale</label><br />
                    @Html.RadioButtonFor(model => model.gender, "Others", new { @required = "required" })<label class="m-lg-2">Others</label><br />
                    @Html.ValidationMessageFor(m => m.gender, "", new { @class = "text-danger" })

                </div>
                <div>
                    <div class="form-group">
                        <label>ADDRESS </label>
                        @Html.TextAreaFor(model => model.address, new { @class = "form-control", @rows = 2, @cols = 4, @required = "required" })
                        @Html.ValidationMessageFor(m => m.address, "", new { @class = "text-danger" })


                    </div>


                </div>


            </div>
        </div>
        <div class="row">
            <div class="col-md-12 mt-3">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a href="@Url.Action("Index","Home")" class="btn btn-info">Back to view</a>
            </div>
        </div>
     }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
